version: "3.9"

services:
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_DB: appdb
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: apppass
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U appuser -d appdb"]
      interval: 5s
      timeout: 5s
      retries: 20

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: 8080
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/appdb
      SPRING_DATASOURCE_USERNAME: appuser
      SPRING_DATASOURCE_PASSWORD: apppass
      # 视你的工程而定（JWT 秘钥/CORS等）
      JWT_SECRET: "change-me-in-prod"
      # 如果你用的是 Spring Boot 3 + JPA，通常不用显式写 dialect；若需要可加：
      # SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      # 可选：首次容器跑时建表策略（生产慎用）
      # SPRING_JPA_HIBERNATE_DDL_AUTO: update
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy

  refund-service:
    build:
      context: ./refund-service
      dockerfile: Dockerfile
    container_name: refund-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: 8081
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/appdb
      SPRING_DATASOURCE_USERNAME: appuser
      SPRING_DATASOURCE_PASSWORD: apppass
      JWT_SECRET: "change-me-in-prod"
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
      user-service:
        condition: service_started

  record-service:
    build:
      context: ./record-service
      dockerfile: Dockerfile
    container_name: record-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: 8082
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/appdb
      SPRING_DATASOURCE_USERNAME: appuser
      SPRING_DATASOURCE_PASSWORD: apppass
      JWT_SECRET: "change-me-in-prod"
    ports:
      - "8082:8082"
    depends_on:
      postgres:
        condition: service_healthy
      user-service:
        condition: service_started
      refund-service:
        condition: service_started

  medical-service:
    build:
      context: ./medical-service
      dockerfile: Dockerfile
    container_name: medical-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SERVER_PORT: 8083
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/appdb
      SPRING_DATASOURCE_USERNAME: appuser
      SPRING_DATASOURCE_PASSWORD: apppass
      JWT_SECRET: "change-me-in-prod"
    ports:
      - "8083:8083"
    depends_on:
      postgres:
        condition: service_healthy
      user-service:
        condition: service_started
      refund-service:
        condition: service_started
volumes:
  pgdata:

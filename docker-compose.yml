version: '3.9'

services:
  # === User Service ===
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    expose:
      - "8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/appdb
      SPRING_DATASOURCE_USERNAME: appuser
      SPRING_DATASOURCE_PASSWORD: apppass
      # 可选：JPA/Hibernate 策略，按你的项目需要选择 update/validate/none
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    depends_on:
      - postgres
    networks:
      - backend

  # === Refund Service ===
  refund-service:
    build:
      context: ./refund-service
      dockerfile: Dockerfile
    container_name: refund-service
    expose:
      - "8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/appdb
      SPRING_DATASOURCE_USERNAME: appuser
      SPRING_DATASOURCE_PASSWORD: apppass
    depends_on:
      - postgres
    networks:
      - backend

  # === Record Service ===
  record-service:
    build:
      context: ./record-service
      dockerfile: Dockerfile
    container_name: record-service
    expose:
      - "8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/appdb
      SPRING_DATASOURCE_USERNAME: appuser
      SPRING_DATASOURCE_PASSWORD: apppass
    depends_on:
      - postgres
    networks:
      - backend

  # === Medical Service ===
  medical-service:
    build:
      context: ./medical-service
      dockerfile: Dockerfile
    container_name: medical-service
    expose:
      - "8083"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/appdb
      SPRING_DATASOURCE_USERNAME: appuser
      SPRING_DATASOURCE_PASSWORD: apppass
    depends_on:
      - postgres
    networks:
      - backend

  # === Gateway Service ===
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    container_name: gateway
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/appdb
      SPRING_DATASOURCE_USERNAME: appuser
      SPRING_DATASOURCE_PASSWORD: apppass
      # ✅ Gateway 自身端口
      SERVER_PORT: 80
      # ✅ 指向容器内服务地址（不要用 localhost）
      SERVICES_USER:    http://user-service:8080
      SERVICES_REFUND:  http://refund-service:8081
      SERVICES_RECORD:  http://record-service:8082
      SERVICES_MEDICAL: http://medical-service:8083
    ports:
      - "80:80"
    depends_on:
      - user-service
      - refund-service
      - record-service
      - medical-service
    networks:
      - backend

  # === Database (optional, if used by backend) ===
  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: appdb
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: apppass
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U appuser -d appdb" ]
      interval: 5s
      timeout: 5s
      retries: 20
    ports:
      - "5433:5432"
    networks:
      - backend

# === Network & Volumes ===
networks:
  backend:

volumes:
  pgdata:
